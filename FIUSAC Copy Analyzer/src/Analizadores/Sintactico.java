
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.*;
import java.util.ArrayList;
import Errores.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Sintactico extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Sintactico() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Sintactico(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintactico(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\103\000\002\002\004\000\002\002\006\000\002\002" +
    "\004\000\002\003\007\000\002\003\010\000\002\003\010" +
    "\000\002\003\004\000\002\005\007\000\002\005\007\000" +
    "\002\005\010\000\002\005\010\000\002\005\004\000\002" +
    "\006\006\000\002\006\007\000\002\006\006\000\002\006" +
    "\007\000\002\006\006\000\002\006\007\000\002\006\010" +
    "\000\002\006\007\000\002\006\007\000\002\006\010\000" +
    "\002\006\007\000\002\006\010\000\002\006\004\000\002" +
    "\007\004\000\002\007\004\000\002\007\004\000\002\007" +
    "\004\000\002\007\004\000\002\007\003\000\002\007\003" +
    "\000\002\007\003\000\002\007\003\000\002\007\003\000" +
    "\002\010\004\000\002\010\004\000\002\010\004\000\002" +
    "\010\003\000\002\010\003\000\002\010\003\000\002\011" +
    "\004\000\002\011\004\000\002\011\003\000\002\011\003" +
    "\000\002\004\006\000\002\004\006\000\002\017\010\000" +
    "\002\015\004\000\002\015\004\000\002\015\004\000\002" +
    "\015\003\000\002\015\003\000\002\020\010\000\002\016" +
    "\004\000\002\016\004\000\002\016\004\000\002\016\003" +
    "\000\002\016\003\000\002\012\006\000\002\012\006\000" +
    "\002\013\006\000\002\013\006\000\002\014\006\000\002" +
    "\014\006\000\002\021\011\000\002\021\011" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\234\000\006\003\005\005\006\001\002\000\004\002" +
    "\236\001\002\000\004\027\235\001\002\000\004\026\007" +
    "\001\002\000\010\003\011\004\013\037\012\001\002\000" +
    "\004\004\230\001\002\000\004\027\227\001\002\000\004" +
    "\034\214\001\002\000\004\026\016\001\002\000\004\027" +
    "\015\001\002\000\004\002\000\001\002\000\010\003\020" +
    "\006\022\007\021\001\002\000\010\006\036\007\035\027" +
    "\034\001\002\000\004\021\033\001\002\000\004\031\027" +
    "\001\002\000\004\031\023\001\002\000\004\030\024\001" +
    "\002\000\004\032\025\001\002\000\004\021\026\001\002" +
    "\000\010\006\ufffa\007\ufffa\027\ufffa\001\002\000\004\030" +
    "\030\001\002\000\004\033\031\001\002\000\004\021\032" +
    "\001\002\000\010\006\ufff9\007\ufff9\027\ufff9\001\002\000" +
    "\010\006\ufff6\007\ufff6\027\ufff6\001\002\000\014\003\052" +
    "\010\054\016\050\017\051\037\012\001\002\000\004\031" +
    "\043\001\002\000\004\031\037\001\002\000\004\030\040" +
    "\001\002\000\004\032\041\001\002\000\004\021\042\001" +
    "\002\000\010\006\ufff8\007\ufff8\027\ufff8\001\002\000\004" +
    "\030\044\001\002\000\004\033\045\001\002\000\004\021" +
    "\046\001\002\000\010\006\ufff7\007\ufff7\027\ufff7\001\002" +
    "\000\012\003\052\010\054\016\050\017\051\001\002\000" +
    "\004\026\207\001\002\000\004\026\203\001\002\000\004" +
    "\027\202\001\002\000\012\010\145\016\143\017\144\027" +
    "\ufffe\001\002\000\004\026\055\001\002\000\014\011\066" +
    "\012\063\013\070\014\067\015\065\001\002\000\016\011" +
    "\uffe1\012\uffe1\013\uffe1\014\uffe1\015\uffe1\027\uffe1\001\002" +
    "\000\016\011\uffdf\012\uffdf\013\uffdf\014\uffdf\015\uffdf\027" +
    "\uffdf\001\002\000\016\011\uffe0\012\uffe0\013\uffe0\014\uffe0" +
    "\015\uffe0\027\uffe0\001\002\000\016\011\066\012\063\013" +
    "\070\014\067\015\065\027\140\001\002\000\016\011\uffe2" +
    "\012\uffe2\013\uffe2\014\uffe2\015\uffe2\027\uffe2\001\002\000" +
    "\004\022\122\001\002\000\016\011\uffe3\012\uffe3\013\uffe3" +
    "\014\uffe3\015\uffe3\027\uffe3\001\002\000\004\022\115\001" +
    "\002\000\004\022\110\001\002\000\004\022\103\001\002" +
    "\000\004\022\071\001\002\000\004\024\072\001\002\000" +
    "\006\031\074\033\073\001\002\000\012\023\uffc8\025\uffc8" +
    "\031\uffc8\033\uffc8\001\002\000\012\023\uffc7\025\uffc7\031" +
    "\uffc7\033\uffc7\001\002\000\012\023\101\025\077\031\100" +
    "\033\076\001\002\000\012\023\uffcb\025\uffcb\031\uffcb\033" +
    "\uffcb\001\002\000\004\021\102\001\002\000\012\023\uffca" +
    "\025\uffca\031\uffca\033\uffca\001\002\000\012\023\uffc9\025" +
    "\uffc9\031\uffc9\033\uffc9\001\002\000\016\011\uffcc\012\uffcc" +
    "\013\uffcc\014\uffcc\015\uffcc\027\uffcc\001\002\000\006\031" +
    "\105\032\104\001\002\000\004\021\107\001\002\000\004" +
    "\021\106\001\002\000\016\011\uffc6\012\uffc6\013\uffc6\014" +
    "\uffc6\015\uffc6\027\uffc6\001\002\000\016\011\uffc5\012\uffc5" +
    "\013\uffc5\014\uffc5\015\uffc5\027\uffc5\001\002\000\006\031" +
    "\112\032\111\001\002\000\004\021\114\001\002\000\004" +
    "\021\113\001\002\000\020\011\uffd4\012\uffd4\013\uffd4\014" +
    "\uffd4\015\uffd4\020\uffd4\027\uffd4\001\002\000\020\011\uffd3" +
    "\012\uffd3\013\uffd3\014\uffd3\015\uffd3\020\uffd3\027\uffd3\001" +
    "\002\000\006\031\117\032\116\001\002\000\004\021\121" +
    "\001\002\000\004\021\120\001\002\000\016\011\uffc4\012" +
    "\uffc4\013\uffc4\014\uffc4\015\uffc4\027\uffc4\001\002\000\016" +
    "\011\uffc3\012\uffc3\013\uffc3\014\uffc3\015\uffc3\027\uffc3\001" +
    "\002\000\004\024\123\001\002\000\006\031\125\032\124" +
    "\001\002\000\012\023\uffce\025\uffce\031\uffce\032\uffce\001" +
    "\002\000\012\023\uffcd\025\uffcd\031\uffcd\032\uffcd\001\002" +
    "\000\012\023\132\025\127\031\131\032\130\001\002\000" +
    "\004\021\133\001\002\000\012\023\uffd1\025\uffd1\031\uffd1" +
    "\032\uffd1\001\002\000\012\023\uffd0\025\uffd0\031\uffd0\032" +
    "\uffd0\001\002\000\012\023\uffcf\025\uffcf\031\uffcf\032\uffcf" +
    "\001\002\000\016\011\uffd2\012\uffd2\013\uffd2\014\uffd2\015" +
    "\uffd2\027\uffd2\001\002\000\016\011\uffe4\012\uffe4\013\uffe4" +
    "\014\uffe4\015\uffe4\027\uffe4\001\002\000\016\011\uffe6\012" +
    "\uffe6\013\uffe6\014\uffe6\015\uffe6\027\uffe6\001\002\000\016" +
    "\011\uffe5\012\uffe5\013\uffe5\014\uffe5\015\uffe5\027\uffe5\001" +
    "\002\000\016\011\uffe7\012\uffe7\013\uffe7\014\uffe7\015\uffe7" +
    "\027\uffe7\001\002\000\014\010\ufff5\016\ufff5\017\ufff5\027" +
    "\ufff5\037\012\001\002\000\016\011\uffe8\012\uffe8\013\uffe8" +
    "\014\uffe8\015\uffe8\027\uffe8\001\002\000\012\010\ufff4\016" +
    "\ufff4\017\ufff4\027\ufff4\001\002\000\004\026\170\001\002" +
    "\000\004\026\152\001\002\000\004\026\146\001\002\000" +
    "\014\011\066\012\063\013\070\014\067\015\065\001\002" +
    "\000\016\011\066\012\063\013\070\014\067\015\065\027" +
    "\150\001\002\000\014\010\uffee\016\uffee\017\uffee\027\uffee" +
    "\037\012\001\002\000\012\010\uffef\016\uffef\017\uffef\027" +
    "\uffef\001\002\000\006\011\066\020\155\001\002\000\010" +
    "\011\uffd6\020\uffd6\027\uffd6\001\002\000\010\011\uffd5\020" +
    "\uffd5\027\uffd5\001\002\000\004\022\163\001\002\000\010" +
    "\011\066\020\155\027\161\001\002\000\010\011\uffd8\020" +
    "\uffd8\027\uffd8\001\002\000\010\011\uffd7\020\uffd7\027\uffd7" +
    "\001\002\000\014\010\uffeb\016\uffeb\017\uffeb\027\uffeb\037" +
    "\012\001\002\000\012\010\uffea\016\uffea\017\uffea\027\uffea" +
    "\001\002\000\006\031\165\032\164\001\002\000\004\021" +
    "\167\001\002\000\004\021\166\001\002\000\010\011\uffc2" +
    "\020\uffc2\027\uffc2\001\002\000\010\011\uffc1\020\uffc1\027" +
    "\uffc1\001\002\000\010\011\066\012\063\013\070\001\002" +
    "\000\012\011\066\012\063\013\070\027\177\001\002\000" +
    "\012\011\uffdb\012\uffdb\013\uffdb\027\uffdb\001\002\000\012" +
    "\011\uffda\012\uffda\013\uffda\027\uffda\001\002\000\012\011" +
    "\uffd9\012\uffd9\013\uffd9\027\uffd9\001\002\000\012\011\uffde" +
    "\012\uffde\013\uffde\027\uffde\001\002\000\012\011\uffdd\012" +
    "\uffdd\013\uffdd\027\uffdd\001\002\000\014\010\uffed\016\uffed" +
    "\017\uffed\027\uffed\037\012\001\002\000\012\011\uffdc\012" +
    "\uffdc\013\uffdc\027\uffdc\001\002\000\012\010\uffec\016\uffec" +
    "\017\uffec\027\uffec\001\002\000\012\010\uffe9\016\uffe9\017" +
    "\uffe9\027\uffe9\001\002\000\006\011\066\020\155\001\002" +
    "\000\010\011\066\020\155\027\205\001\002\000\014\010" +
    "\ufff1\016\ufff1\017\ufff1\027\ufff1\037\012\001\002\000\012" +
    "\010\ufff0\016\ufff0\017\ufff0\027\ufff0\001\002\000\010\011" +
    "\066\012\063\013\070\001\002\000\012\011\066\012\063" +
    "\013\070\027\211\001\002\000\014\010\ufff3\016\ufff3\017" +
    "\ufff3\027\ufff3\037\012\001\002\000\012\010\ufff2\016\ufff2" +
    "\017\ufff2\027\ufff2\001\002\000\012\010\145\016\143\017" +
    "\144\027\ufffc\001\002\000\006\032\215\036\216\001\002" +
    "\000\004\023\223\001\002\000\004\023\217\001\002\000" +
    "\004\036\220\001\002\000\004\035\221\001\002\000\004" +
    "\021\222\001\002\000\016\003\uffbf\004\uffbf\010\uffbf\016" +
    "\uffbf\017\uffbf\027\uffbf\001\002\000\004\032\224\001\002" +
    "\000\004\035\225\001\002\000\004\021\226\001\002\000" +
    "\016\003\uffc0\004\uffc0\010\uffc0\016\uffc0\017\uffc0\027\uffc0" +
    "\001\002\000\004\027\ufffb\001\002\000\004\026\231\001" +
    "\002\000\010\003\020\006\022\007\021\001\002\000\010" +
    "\006\036\007\035\027\233\001\002\000\012\003\052\010" +
    "\054\016\050\017\051\001\002\000\012\010\145\016\143" +
    "\017\144\027\ufffd\001\002\000\004\002\uffff\001\002\000" +
    "\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\234\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\003\013\021\007" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\016\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\052\021\046\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\006\212\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\004\063\007\060\012\057\013\056\017" +
    "\061\020\055\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\004\140\012\135\013\133\017" +
    "\136\020\134\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\016\074\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\015\125" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\021\141\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\004\063\007\146\012\057\013\056\017\061\020\055\001" +
    "\001\000\014\004\140\012\135\013\133\017\136\020\134" +
    "\001\001\000\004\021\150\001\001\000\002\001\001\000" +
    "\010\004\152\011\155\014\153\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\004\156\014" +
    "\157\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\021\161\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\004\171\010\170\017\172\020\173\001" +
    "\001\000\010\004\174\017\175\020\177\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\021\200\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\004" +
    "\152\011\203\014\153\001\001\000\006\004\156\014\157" +
    "\001\001\000\004\021\205\001\001\000\002\001\001\000" +
    "\012\004\171\010\207\017\172\020\173\001\001\000\010" +
    "\004\174\017\175\020\177\001\001\000\004\021\211\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\005\231" +
    "\001\001\000\002\001\001\000\004\006\233\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintactico$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintactico$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintactico$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public String Resulto = "";
    private Symbol s;
    public ArrayList<NodoVariable> ListaVariables = new ArrayList();
    public ArrayList<NodoGrafica> GraficasEjecutar = new ArrayList();
    public ArrayList<String> Ejes = new ArrayList();
    public ArrayList<String> Direcciones = new ArrayList();
    public ArrayList<String> valores = new ArrayList();
    public ArrayList<String> ListaTokens = new ArrayList();
    public NodoGrafica graficabarras = new NodoGrafica();
    public NodoGrafica graficapie = new NodoGrafica();
    public NodoGrafica graficalineas = new NodoGrafica();

    public void error_sintax(Symbol s){
        this.s = s;
    }
    
    public Symbol getS(){
        return this.s;
    } 

    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+".");
        Errores.Error.ErroresCometidos.add(new Excepciones("Sintactico", "Este es un error sintactico: "+s.value, s.left, s.right));
    } 

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
        Errores.Error.ErroresCometidos.add(new Excepciones("Sintactico", "Este es un error sintactico: "+s.value, s.left, s.right));
    } 


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Sintactico$actions {
  private final Sintactico parser;

  /** Constructor */
  CUP$Sintactico$actions(Sintactico parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Sintactico$do_action_part00000000(
    int                        CUP$Sintactico$act_num,
    java_cup.runtime.lr_parser CUP$Sintactico$parser,
    java.util.Stack            CUP$Sintactico$stack,
    int                        CUP$Sintactico$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintactico$result;

      /* select the action based on the action number */
      switch (CUP$Sintactico$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= ini EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		RESULT = start_val;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintactico$parser.done_parsing();
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // ini ::= BPGRE BPLLAIZQ contenidogeneral BPLLADER 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		ListaTokens.add(var1); ListaTokens.add(var2); ListaTokens.add(var3);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("ini",0, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ini ::= error BPLLADER 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("ini",0, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // contenidogeneral ::= BPDEG BPLLAIZQ cuerpo BPLLADER graficas 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		ListaTokens.add(var1); ListaTokens.add(var2);
                                                                            ListaTokens.add(var3);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidogeneral",1, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // contenidogeneral ::= compara BPDEG BPLLAIZQ cuerpo BPLLADER graficas 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                    ListaTokens.add(var3);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidogeneral",1, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // contenidogeneral ::= BPDEG BPLLAIZQ cuerpo BPLLADER compara graficas 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                    ListaTokens.add(var3);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidogeneral",1, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // contenidogeneral ::= error BPLLADER 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidogeneral",1, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // cuerpo ::= BPSTG IDENTIFICADOR BPEQUAL BPCADENA BPPTCOMA 
            {
              ArrayList<NodoVariable> RESULT =null;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var5 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		ListaVariables.add(new NodoVariable(var1, var2));
                                                                                   ListaTokens.add(var3); ListaTokens.add(var4);
                                                                                   ListaTokens.add(var5);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("cuerpo",3, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // cuerpo ::= BPDOUBLE IDENTIFICADOR BPEQUAL DD BPPTCOMA 
            {
              ArrayList<NodoVariable> RESULT =null;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var5 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		ListaVariables.add(new NodoVariable(var1, var2));
                                                                               ListaTokens.add(var3); ListaTokens.add(var4);
                                                                               ListaTokens.add(var5);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("cuerpo",3, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // cuerpo ::= cuerpo BPSTG IDENTIFICADOR BPEQUAL BPCADENA BPPTCOMA 
            {
              ArrayList<NodoVariable> RESULT =null;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var5 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		ListaVariables.add(new NodoVariable(var1, var2));
                                                                         ListaTokens.add(var3); ListaTokens.add(var4);
                                                                         ListaTokens.add(var5);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("cuerpo",3, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // cuerpo ::= cuerpo BPDOUBLE IDENTIFICADOR BPEQUAL DD BPPTCOMA 
            {
              ArrayList<NodoVariable> RESULT =null;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var5 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		ListaVariables.add(new NodoVariable(var1, var2));
                                                                                      ListaTokens.add(var3); ListaTokens.add(var4);
                                                                                      ListaTokens.add(var5);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("cuerpo",3, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // cuerpo ::= error BPPTCOMA 
            {
              ArrayList<NodoVariable> RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("cuerpo",3, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // graficas ::= BPGBARRAS BPLLAIZQ datosgraficabarra BPLLADER 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.tipo=var1;
                                                                          GraficasEjecutar.add(graficabarras);
                                                                          ListaTokens.add(var1); ListaTokens.add(var2);
                                                                          ListaTokens.add(var3); 
                                                                          graficabarras=new NodoGrafica();
                                                                          valores = new ArrayList();
                                                                          Ejes = new ArrayList();
                                                                         
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // graficas ::= BPGBARRAS BPLLAIZQ datosgraficabarra BPLLADER compara 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		graficabarras.tipo=var1;
                                                                                GraficasEjecutar.add(graficabarras);
                                                                                ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                ListaTokens.add(var3);
                                                                                graficabarras=new NodoGrafica();
                                                                                valores = new ArrayList();
                                                                                Ejes = new ArrayList();
                                                                                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // graficas ::= BPGPIE BPLLAIZQ datosgraficapie BPLLADER 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficapie.tipo=var1;
                                                                        GraficasEjecutar.add(graficapie);
                                                                        ListaTokens.add(var1); ListaTokens.add(var2);
                                                                        ListaTokens.add(var3);
                                                                        graficapie = new NodoGrafica();
                                                                        valores = new ArrayList();
                                                                        Ejes = new ArrayList();
                                                                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // graficas ::= BPGPIE BPLLAIZQ datosgraficapie BPLLADER compara 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		graficapie.tipo=var1;
                                                                               GraficasEjecutar.add(graficapie);
                                                                               ListaTokens.add(var1); ListaTokens.add(var2);
                                                                               ListaTokens.add(var3);
                                                                               graficapie = new NodoGrafica();
                                                                               valores = new ArrayList();
                                                                               Ejes = new ArrayList();
                                                                               
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // graficas ::= BPGLINEAS BPLLAIZQ datosgraficalineal BPLLADER 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficalineas.tipo=var1;
                                                                            GraficasEjecutar.add(graficalineas);
                                                                            ListaTokens.add(var1); ListaTokens.add(var2);
                                                                            ListaTokens.add(var3);
                                                                            graficalineas = new NodoGrafica();
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // graficas ::= BPGLINEAS BPLLAIZQ datosgraficalineal BPLLADER compara 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		graficalineas.tipo=var1;
                                                                                    GraficasEjecutar.add(graficalineas);
                                                                                    ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                    ListaTokens.add(var3);
                                                                                    graficalineas = new NodoGrafica();
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // graficas ::= graficas BPGBARRAS BPLLAIZQ datosgraficabarra BPLLADER compara 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		graficabarras.tipo=var1;
                                                                                            GraficasEjecutar.add(graficabarras);
                                                                                            ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                            ListaTokens.add(var3);
                                                                                            graficabarras=new NodoGrafica();
                                                                                            valores = new ArrayList();
                                                                                            Ejes = new ArrayList();
                                                                                            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // graficas ::= graficas BPGBARRAS BPLLAIZQ datosgraficabarra BPLLADER 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.tipo=var1;
                                                                                    GraficasEjecutar.add(graficabarras);
                                                                                    ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                    ListaTokens.add(var3);
                                                                                    graficabarras=new NodoGrafica();
                                                                                    valores = new ArrayList();
                                                                                    Ejes = new ArrayList();
                                                                                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // graficas ::= graficas BPGPIE BPLLAIZQ datosgraficapie BPLLADER 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficapie.tipo=var1;
                                                                                GraficasEjecutar.add(graficapie);
                                                                                ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                ListaTokens.add(var3);
                                                                                graficapie = new NodoGrafica();
                                                                                valores = new ArrayList();
                                                                                Ejes = new ArrayList();
                                                                                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // graficas ::= graficas BPGPIE BPLLAIZQ datosgraficapie BPLLADER compara 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		graficapie.tipo=var1;
                                                                                        GraficasEjecutar.add(graficapie);
                                                                                        ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                        ListaTokens.add(var3);
                                                                                        graficapie = new NodoGrafica();
                                                                                        valores = new ArrayList();
                                                                                        Ejes = new ArrayList();
                                                                                        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // graficas ::= graficas BPGLINEAS BPLLAIZQ datosgraficalineal BPLLADER 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficalineas.tipo=var1;
                                                                                    GraficasEjecutar.add(graficalineas);
                                                                                    ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                    ListaTokens.add(var3);
                                                                                    graficalineas = new NodoGrafica();
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // graficas ::= graficas BPGLINEAS BPLLAIZQ datosgraficalineal BPLLADER compara 
            {
              ArrayList<NodoGrafica> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		graficalineas.tipo=var1;
                                                                                            GraficasEjecutar.add(graficalineas);
                                                                                            ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                            ListaTokens.add(var3);
                                                                                            graficalineas = new NodoGrafica();
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // graficas ::= error BPLLADER 
            {
              ArrayList<NodoGrafica> RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("graficas",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // datosgraficabarra ::= datosgraficabarra titulos 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.titulo=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficabarra",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // datosgraficabarra ::= datosgraficabarra ejesx 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		ArrayList<String> var1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.Ejes=var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficabarra",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // datosgraficabarra ::= datosgraficabarra valores 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		ArrayList<String> var1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.Valores=var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficabarra",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // datosgraficabarra ::= datosgraficabarra titulox 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.Titulox=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficabarra",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // datosgraficabarra ::= datosgraficabarra tituloy 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.Tituloy=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficabarra",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // datosgraficabarra ::= titulos 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.titulo=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficabarra",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // datosgraficabarra ::= ejesx 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		ArrayList<String> var1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.Ejes=var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficabarra",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // datosgraficabarra ::= valores 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		ArrayList<String> var1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.Valores=var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficabarra",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // datosgraficabarra ::= titulox 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.Titulox=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficabarra",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // datosgraficabarra ::= tituloy 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficabarras.Tituloy=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficabarra",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // datosgraficapie ::= datosgraficapie titulos 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficapie.titulo=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficapie",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // datosgraficapie ::= datosgraficapie ejesx 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		ArrayList<String> var1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficapie.Ejes=var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficapie",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // datosgraficapie ::= datosgraficapie valores 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		ArrayList<String> var1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficapie.Valores=var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficapie",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // datosgraficapie ::= titulos 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficapie.titulo=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficapie",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // datosgraficapie ::= ejesx 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		ArrayList<String> var1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficapie.Ejes=var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficapie",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // datosgraficapie ::= valores 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		ArrayList<String> var1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficapie.Valores=var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficapie",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // datosgraficalineal ::= datosgraficalineal titulos 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficalineas.titulo=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficalineal",7, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // datosgraficalineal ::= datosgraficalineal Arch 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficalineas.Titulox=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficalineal",7, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // datosgraficalineal ::= titulos 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficalineas.titulo=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficalineal",7, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // datosgraficalineal ::= Arch 
            {
              Object RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object var1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		graficalineas.Titulox=(String) var1;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("datosgraficalineal",7, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // titulos ::= BPTITULO BPDOSPUNTOS IDENTIFICADOR BPPTCOMA 
            {
              Object RESULT =null;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=var1; 
                                                                            ListaTokens.add(var2); ListaTokens.add(var3);
                                                                            ListaTokens.add(var4);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("titulos",2, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // titulos ::= BPTITULO BPDOSPUNTOS BPCADENA BPPTCOMA 
            {
              Object RESULT =null;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=var1;
                                                                      ListaTokens.add(var2); ListaTokens.add(var3);
                                                                      ListaTokens.add(var4);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("titulos",2, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ejesx ::= BPEJEX BPDOSPUNTOS BPCORIZQ contenidox BPCORDER BPPTCOMA 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var5 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=Ejes;
                                                                                           ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                           ListaTokens.add(var3); ListaTokens.add(var4);
                                                                                           ListaTokens.add(var5);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("ejesx",13, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // contenidox ::= contenidox BPCADENA 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		Ejes.add(var1);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidox",11, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // contenidox ::= contenidox IDENTIFICADOR 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		Ejes.add(var1);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidox",11, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // contenidox ::= contenidox BPCOMA 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		ListaTokens.add(var1);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidox",11, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // contenidox ::= BPCADENA 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		Ejes.add(var1);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidox",11, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // contenidox ::= IDENTIFICADOR 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		Ejes.add(var1);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidox",11, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // valores ::= BPVALORES BPDOSPUNTOS BPCORIZQ contenidov BPCORDER BPPTCOMA 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var5 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=valores;
                                                                                                ListaTokens.add(var1); ListaTokens.add(var2);
                                                                                                ListaTokens.add(var3); ListaTokens.add(var4);
                                                                                                ListaTokens.add(var5);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("valores",14, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // contenidov ::= contenidov DD 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		valores.add((String) var1);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidov",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // contenidov ::= contenidov IDENTIFICADOR 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		valores.add( var1);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidov",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // contenidov ::= contenidov BPCOMA 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		ListaTokens.add(var1);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidov",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // contenidov ::= DD 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		valores.add((String) var1);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidov",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // contenidov ::= IDENTIFICADOR 
            {
              ArrayList<String> RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		valores.add( var1);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("contenidov",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // titulox ::= BPTTX BPDOSPUNTOS IDENTIFICADOR BPPTCOMA 
            {
              Object RESULT =null;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=var1; ListaTokens.add(var2); ListaTokens.add(var3);
                                                                        ListaTokens.add(var4);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("titulox",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // titulox ::= BPTTX BPDOSPUNTOS BPCADENA BPPTCOMA 
            {
              Object RESULT =null;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=var1; ListaTokens.add(var2); ListaTokens.add(var3); 
                                                                    ListaTokens.add(var4);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("titulox",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // tituloy ::= BPTTY BPDOSPUNTOS IDENTIFICADOR BPPTCOMA 
            {
              Object RESULT =null;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=var1; ListaTokens.add(var2); ListaTokens.add(var3); 
                                                                        ListaTokens.add(var4);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("tituloy",9, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // tituloy ::= BPTTY BPDOSPUNTOS BPCADENA BPPTCOMA 
            {
              Object RESULT =null;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=var1; ListaTokens.add(var2); ListaTokens.add(var3); 
                                                                    ListaTokens.add(var4);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("tituloy",9, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Arch ::= BPARCHIVO BPDOSPUNTOS IDENTIFICADOR BPPTCOMA 
            {
              Object RESULT =null;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=var1; ListaTokens.add(var2); ListaTokens.add(var3); 
                                                                         ListaTokens.add(var4);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("Arch",10, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Arch ::= BPARCHIVO BPDOSPUNTOS BPCADENA BPPTCOMA 
            {
              Object RESULT =null;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=var1; ListaTokens.add(var2); ListaTokens.add(var3); 
                                                                     ListaTokens.add(var4);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("Arch",10, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // compara ::= BPCOMPARE BPPAA BPCADENA BPCOMA BPCADENA BPPAC BPPTCOMA 
            {
              ArrayList<String> RESULT =null;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var5 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var6 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var7 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		Direcciones.add(var1); Direcciones.add(var2);
                                                                                                        ListaTokens.add(var3); ListaTokens.add(var4); 
                                                                                                        ListaTokens.add(var5); ListaTokens.add(var6);
                                                                                                        ListaTokens.add(var7);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("compara",15, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // compara ::= BPCOMPARE BPPAA BPRUTA BPCOMA BPRUTA BPPAC BPPTCOMA 
            {
              ArrayList<String> RESULT =null;
		int var3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int var3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		String var3 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int var4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int var4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		String var4 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int var1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int var5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int var5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		String var5 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int var6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int var6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		String var6 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int var7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int var7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		String var7 = (String)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		Direcciones.add(var1); Direcciones.add(var2);
                                                                                                        ListaTokens.add(var3); ListaTokens.add(var4); 
                                                                                                        ListaTokens.add(var5); ListaTokens.add(var6);
                                                                                                        ListaTokens.add(var7);
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("compara",15, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Sintactico$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Sintactico$do_action(
    int                        CUP$Sintactico$act_num,
    java_cup.runtime.lr_parser CUP$Sintactico$parser,
    java.util.Stack            CUP$Sintactico$stack,
    int                        CUP$Sintactico$top)
    throws java.lang.Exception
    {
              return CUP$Sintactico$do_action_part00000000(
                               CUP$Sintactico$act_num,
                               CUP$Sintactico$parser,
                               CUP$Sintactico$stack,
                               CUP$Sintactico$top);
    }
}

}
